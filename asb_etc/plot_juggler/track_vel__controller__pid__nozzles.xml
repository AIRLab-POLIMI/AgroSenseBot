<?xml version='1.0' encoding='UTF-8'?>
<root>
 <tabbed_widget parent="main_window" name="Main Window">
  <Tab containers="1" tab_name="tab1">
   <Container>
    <DockSplitter orientation="-" sizes="0.175753;0.189585;0.180635;0.148088;0.149715;0.156225" count="6">
     <DockArea name="...">
      <plot style="Lines" flip_x="false" mode="TimeSeries" flip_y="false">
       <range top="329.867229" bottom="-329.867229" right="1727181607.366275" left="1727181591.788505"/>
       <limitY/>
       <curve name="/asb_platform_controller/platform_state/left_motor_velocity" color="#0200ff"/>
       <curve name="/asb_platform_controller/platform_state/right_motor_velocity" color="#b10a00"/>
       <curve name="/zero/data" color="#a9a9a9"/>
       <curve name="/asb_platform_controller/platform_state/left_motor_velocity_setpoint" color="#6cf1ff"/>
       <curve name="/asb_platform_controller/platform_state/right_motor_velocity_setpoint" color="#ffda78"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot style="Lines" flip_x="false" mode="TimeSeries" flip_y="false">
       <range top="0.426112" bottom="-0.670591" right="1727181607.366275" left="1727181591.788505"/>
       <limitY/>
       <curve name="/cmd_vel/linear/x" color="#0600ff"/>
       <curve name="/odom/twist/twist/linear/x" color="#ff0400"/>
       <curve name="/zero/data" color="#b5b5b5"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot style="Lines" flip_x="false" mode="TimeSeries" flip_y="false">
       <range top="0.458694" bottom="-0.420944" right="1727181607.366275" left="1727181591.788505"/>
       <limitY/>
       <curve name="/odom/twist/twist/angular/z" color="#ff1b00"/>
       <curve name="/cmd_vel/angular/z" color="#0100ff"/>
       <curve name="/zero/data" color="#b0b0b0"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot style="Lines" flip_x="false" mode="TimeSeries" flip_y="false">
       <range top="1.050000" bottom="-1.050000" right="1727181607.366275" left="1727181591.788505"/>
       <limitY/>
       <curve name="/asb_base_controller/pid_state/i_min" color="#4f4f4f"/>
       <curve name="/asb_base_controller/pid_state/i_max" color="#595959"/>
       <curve name="/asb_base_controller/pid_state/i_term" color="#ff1b00"/>
       <curve name="/zero/data" color="#bfbfbf"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot style="Lines" flip_x="false" mode="TimeSeries" flip_y="false">
       <range top="3.271677" bottom="-4.510515" right="1727181607.366275" left="1727181591.788505"/>
       <limitY/>
       <curve name="/cmd_vel_curvature/data" color="#ff1d00"/>
       <curve name="/odom_curvature/data" color="#1000ff"/>
       <curve name="/zero/data" color="#b5b5b5"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot style="Lines" flip_x="false" mode="TimeSeries" flip_y="false">
       <range top="0.100000" bottom="-0.100000" right="1727181607.366275" left="1727181591.788505"/>
       <limitY/>
       <curve name="/nozzles_command/nozzle_command_array[0]/rate" color="#0800ff"/>
       <curve name="/nozzles_command/nozzle_command_array[7]/rate" color="#ff1b00"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <currentTabIndex index="0"/>
 </tabbed_widget>
 <use_relative_time_offset enabled="0"/>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <Plugins>
  <plugin ID="DataLoad CSV">
   <parameters time_axis="" delimiter="0"/>
  </plugin>
  <plugin ID="DataLoad MCAP"/>
  <plugin ID="DataLoad ROS2 bags">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
   <selected_topics value="/asb_base_controller/pid_state;/asb_platform_controller/fan_cmd;/asb_platform_controller/platform_state;/cmd_vel;/cmd_vel_curvature;/lookahead_curvature;/max_curvature;/min_curvature;/nozzles_command;/odom;/odom_curvature;/zero"/>
  </plugin>
  <plugin ID="DataLoad ULog"/>
  <plugin ID="ROS2 Topic Subscriber">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
   <selected_topics value="/asb_base_controller/pid_state;/cmd_vel;/cmd_vel_curvature;/imu;/lookahead_curvature;/max_curvature;/min_curvature;/odom;/odom_curvature;/zero;/benchmarking/closest_point_on_global_path;/benchmarking/robot_global_path_distance;/benchmarking/robot_global_path_distance_viz"/>
  </plugin>
  <plugin ID="UDP Server"/>
  <plugin ID="WebSocket Server"/>
  <plugin ID="ZMQ Subscriber"/>
  <plugin ID="Fast Fourier Transform"/>
  <plugin ID="Quaternion to RPY"/>
  <plugin ID="Reactive Script Editor">
   <library code="--[[ Helper function to create a series from arrays&#xa;&#xa; new_series: a series previously created with ScatterXY.new(name)&#xa; prefix:     prefix of the timeseries, before the index of the array&#xa; suffix_X:   suffix to complete the name of the series containing the X value. If [nil], use the index of the array.&#xa; suffix_Y:   suffix to complete the name of the series containing the Y value&#xa; timestamp:   usually the tracker_time variable&#xa;              &#xa; Example:&#xa; &#xa; Assuming we have multiple series in the form:&#xa; &#xa;   /trajectory/node.{X}/position/x&#xa;   /trajectory/node.{X}/position/y&#xa;   &#xa; where {N} is the index of the array (integer). We can create a reactive series from the array with:&#xa; &#xa;   new_series = ScatterXY.new(&quot;my_trajectory&quot;) &#xa;   CreateSeriesFromArray( new_series, &quot;/trajectory/node&quot;, &quot;position/x&quot;, &quot;position/y&quot;, tracker_time );&#xa;--]]&#xa;&#xa;function CreateSeriesFromArray( new_series, prefix, suffix_X, suffix_Y, timestamp )&#xa;  &#xa;  --- clear previous values&#xa;  new_series:clear()&#xa;  &#xa;  --- Append points to new_series&#xa;  index = 0&#xa;  while(true) do&#xa;&#xa;    x = index;&#xa;    -- if not nil, get the X coordinate from a series&#xa;    if suffix_X ~= nil then &#xa;      series_x = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_X) )&#xa;      if series_x == nil then break end&#xa;      x = series_x:atTime(timestamp)&#x9; &#xa;    end&#xa;    &#xa;    series_y = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_Y) )&#xa;    if series_y == nil then break end &#xa;    y = series_y:atTime(timestamp)&#xa;    &#xa;    new_series:push_back(x,y)&#xa;    index = index+1&#xa;  end&#xa;end&#xa;&#xa;--[[ Similar to the built-in function GetSeriesNames(), but select only the names with a give prefix. --]]&#xa;&#xa;function GetSeriesNamesByPrefix(prefix)&#xa;  -- GetSeriesNames(9 is a built-in function&#xa;  all_names = GetSeriesNames()&#xa;  filtered_names = {}&#xa;  for i, name in ipairs(all_names)  do&#xa;    -- check the prefix&#xa;    if name:find(prefix, 1, #prefix) then&#xa;      table.insert(filtered_names, name);&#xa;    end&#xa;  end&#xa;  return filtered_names&#xa;end&#xa;&#xa;--[[ Modify an existing series, applying offsets to all their X and Y values&#xa;&#xa; series: an existing timeseries, obtained with TimeseriesView.find(name)&#xa; delta_x: offset to apply to each x value&#xa; delta_y: offset to apply to each y value &#xa;  &#xa;--]]&#xa;&#xa;function ApplyOffsetInPlace(series, delta_x, delta_y)&#xa;  -- use C++ indeces, not Lua indeces&#xa;  for index=0, series:size()-1 do&#xa;    x,y = series:at(index)&#xa;    series:set(index, x + delta_x, y + delta_y)&#xa;  end&#xa;end&#xa;"/>
   <scripts/>
  </plugin>
  <plugin ID="CSV Exporter"/>
  <plugin ID="ROS2 Topic Re-Publisher"/>
 </Plugins>
 <!-- - - - - - - - - - - - - - - -->
 <previouslyLoaded_Datafiles>
  <fileInfo filename="../../../../../../asb_logs/2024-09-24_decomp/rosbag2_2024-09-24__14-35-36_all_except_sensors/metadata.yaml" prefix=""/>
 </previouslyLoaded_Datafiles>
 <!-- - - - - - - - - - - - - - - -->
 <customMathEquations/>
 <snippets/>
 <!-- - - - - - - - - - - - - - - -->
</root>

