# For parameter descriptions, please refer to the template parameter files for each node.

#ekf_filter_node_odom:
#  ros__parameters:
#    frequency: 30.0
#    two_d_mode: true # Recommended to use 2d mode for nav2 in mostly planar environments
#    print_diagnostics: true
#    debug: false
#    publish_tf: true
#
#    map_frame: map
#    odom_frame: odom
#    base_link_frame: base_footprint # the frame id used by the turtlebot's diff drive plugin
#    world_frame: odom
#
#    odom0: odom
#    odom0_config: [
#      false, false, false,
#      false, false, false,
#      true,  true,  true,
#      false, false, true,
#      false, false, false
#    ]
#    odom0_queue_size: 10
#    odom0_differential: false
#    odom0_relative: false
#
#    imu0: imu
#    imu0_config: [
#      false, false, false,
#      false, false, true,
#      false, false, false,
#      false, false, false,
#      false, false, false
#    ]
#    imu0_differential: false  # If using a real robot you might want to set this to true,
#                              # since usually absolute measurements from real imu's are not very accurate
#    imu0_relative: false
#    imu0_queue_size: 10
#    imu0_remove_gravitational_acceleration: true
#
#    use_control: false
#
#    process_noise_covariance: [1e-3, 1e-3, 1e-3, 0.3, 0.3, 0.01, 0.5, 0.5, 0.1, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3]

ekf_filter_node_map:
  ros__parameters:
    frequency: 30.0
    two_d_mode: true  # Recommended to use 2d mode for nav2 in mostly planar environments
    print_diagnostics: true
    debug: false
    publish_tf: true

    map_frame: map
    odom_frame: odom
    base_link_frame: base_footprint
    world_frame: map  # publish the map->odom transform

    odom0: odom
    odom0_config: [
      false, false, false,  # x, y, z
      false, false, false,  # roll, pitch, yaw
      true,  true,  true,   # v_x,  v_y,  v_z
      false, false, true,   # v_roll, v_pitch, v_yaw
      false, false, false   # a_x,  a_y,  a_z
    ]
    odom0_queue_size: 10
    odom0_differential: false
    odom0_relative: false

    odom1: odometry/gps
    odom1_config: [
      true,  true,  false,  # x, y, z
      false, false, false,  # roll, pitch, yaw
      false, false, false,  # v_x, v_y, v_z
      false, false, false,  # v_roll, v_pitch, v_yaw
      false, false, false   # a_x, a_y, a_z
    ]
    odom1_queue_size: 10
    odom1_differential: false
    odom1_relative: false

    imu0: imu
    imu0_config: [
      false, false, false,  # x, y, z
      false, false, true,   # roll, pitch, yaw
      false, false, false,  # v_x, v_y, v_z
      false, false, false,  # v_roll, v_pitch, v_yaw
      false, false, false   # a_x, a_y, a_z
    ]
    imu0_differential: false  # If using a real robot you might want to set this to true,
                              # since usually absolute measurements from real imu's are not very accurate
    imu0_relative: false
    imu0_queue_size: 10
    imu0_remove_gravitational_acceleration: true

    use_control: false

    process_noise_covariance: [  # diagonal of the process noise covariance matrix
      1.0, 1.0, 1e-3,  # x, y, z
      0.3, 0.3, 0.01,  # roll, pitch, yaw
      0.5, 0.5, 0.1,   # v_x, v_y, v_z
      0.3, 0.3, 0.3,   # v_roll, v_pitch, v_yaw
      0.3, 0.3, 0.3    # a_x, a_y, a_z
    ]

navsat_transform:
  ros__parameters:
    frequency: 30.0
    delay: 3.0
    magnetic_declination_radians: 0.0
    yaw_offset: 0.0
    zero_altitude: true
    broadcast_utm_transform: true
    publish_filtered_gps: true
    use_odometry_yaw: true
    wait_for_datum: false
    datum: [38.16147759561979, -122.45458617258019, 0.0]
